{"version":3,"sources":["components/Joystick/Joystick.module.css","components/Header/Header.module.css","containers/App/App.module.css","containers/Board/Board.module.css","assets/images/mute.svg","assets/images/unmute.svg","components/Notification/Notification.module.css","assets/images/lollipop.svg","assets/images/ice_cream.svg","assets/images/logo.svg","assets/audio/maze.mp3","assets/audio/level_end.mp3","components/Header/Header.js","components/Notification/Notification.js","utils/arrayUtils.js","utils/constants.js","utils/random.js","maze/Maze.js","maze/MazeGenerator.js","containers/Board/Board.js","hooks/useKey.js","components/Joystick/Joystick.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","hiScore","time","points","round","handleToggleMute","mute","rightSideText","className","styles","score","toString","padStart","row","stats","responsiveScore","muteButton","title","onClick","src","unmuteIcon","alt","muteIcon","Notification","show","gameOver","handleOnStartGame","root","arraysEqual","a","b","length","i","KEYBOARD","MAZE_PRIZES","name","image","lollipopImage","iceCreamImage","getRandInt","min","max","Math","floor","random","Maze","rows","cols","cells","startCell","endCell","randomCellsAmount","this","randomCells","Set","size","randomCell","getRandomCell","add","map","cell","split","splittedCell","parseInt","x","y","currentCell","action","newPos","currCellWalls","getCell","Error","isValid","findIndex","getPrizeCellIndex","Cell","walls","visited","MazeGenerator","pickRandomCellsAmount","stack","grid","push","current","neighbors","filter","c","next","dx","dy","checkNeighbors","removeWallsBetweenCurrentAnd","carve","pop","createGrid","Board","maze","prizes","forwardedRef","canvas","useRef","useState","undefined","ctx","setCtx","displayGoal","setDisplayGoal","onResize","useCallback","offsetWidth","offsetHeight","width","height","useEffect","getContext","window","addEventListener","removeEventListener","didCancel","drawLine","x1","y1","strokeStyle","beginPath","moveTo","lineTo","stroke","fillStyle","fillRect","blockWidth","blockHeight","xOffset","generateImage","img","logoSize","Image","onload","drawImage","generateText","text","color","textSize","font","textBaseline","fillText","logoImage","forEach","prize","isTaken","takenTime","Date","draw","useInterval","oldDisplayState","ref","noop","useKey","keys","actionRef","onKeyDown","event","includes","key","preventDefault","Joystick","handleOnArrowKeyPressed","clsx","button","left","arrow","leftArrow","right","rightArrow","top","upArrow","bottom","downArrow","reducer","state","type","payload","visitedCells","isGoalReached","index","removeIndex","p","idx","isVisited","has","mazeAudio","Audio","mazeAudioFile","loop","levelEndAudio","mazeLevelEndAudioFile","App","useReducer","dispatch","setMute","container","isGameOver","pause","currentTime","oldMute","generate","validateStep","prizeIndex","play","onFinishAudio","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.178b359a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Joystick_root__1enSk\",\"arrow\":\"Joystick_arrow__3L0zY\",\"rightArrow\":\"Joystick_rightArrow__3fIoB\",\"leftArrow\":\"Joystick_leftArrow__2OnpI\",\"upArrow\":\"Joystick_upArrow__JsZSs\",\"downArrow\":\"Joystick_downArrow__13DkV\",\"button\":\"Joystick_button__3bTHC\",\"left\":\"Joystick_left__DHKhd\",\"right\":\"Joystick_right__RtAhu\",\"top\":\"Joystick_top__20gVn\",\"bottom\":\"Joystick_bottom__2IutX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Header_row__3nAfu\",\"score\":\"Header_score__d2DrR\",\"stats\":\"Header_stats__1vdt3\",\"responsiveScore\":\"Header_responsiveScore__pXxo6\",\"muteButton\":\"Header_muteButton__213aW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__33b96\",\"container\":\"App_container__2WP0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Board_root__1mqwi\",\"canvas\":\"Board_canvas__3kXBv\"};","module.exports = __webpack_public_path__ + \"static/media/mute.7f5ee120.svg\";","module.exports = __webpack_public_path__ + \"static/media/unmute.9339f319.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Notification_root__2LX0b\"};","module.exports = __webpack_public_path__ + \"static/media/lollipop.5bf858ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice_cream.c760f5dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f342226d.svg\";","module.exports = __webpack_public_path__ + \"static/media/maze.12c141ff.mp3\";","module.exports = __webpack_public_path__ + \"static/media/level_end.3931d957.mp3\";","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport muteIcon from '../../assets/images/mute.svg';\r\nimport unmuteIcon from '../../assets/images/unmute.svg';\r\n\r\nfunction Header({ hiScore, time, points, round, handleToggleMute, mute }) {\r\n  const formatTime = () => {\r\n    return time || time === 0 ? time.toString().padStart(2, ' ') : null;\r\n  };\r\n\r\n  const rightSideText = (\r\n    <span>\r\n      Hi-Score <span className={styles.score}>{hiScore.toString().padStart(5, ' ')}</span>\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <header>\r\n      <div className={styles.row}>\r\n        <p>Welcome to the StorrSoft maze!</p>\r\n        <p>{rightSideText}</p>\r\n      </div>\r\n      <div className={styles.stats}>\r\n        <p>\r\n          1UP <span className={styles.score}>{points.toString().padStart(5, ' ')}</span>&nbsp;&nbsp;\r\n          ROUND <span className={styles.score}>{round.toString().padStart(3, ' ')}</span>\r\n          &nbsp;&nbsp; TIME <span className={styles.score}>{formatTime()}</span>&nbsp;&nbsp;\r\n        </p>\r\n        <p className={styles.responsiveScore}>{rightSideText}</p>\r\n        {mute ? (\r\n          <button\r\n            className={styles.muteButton}\r\n            title=\"Click here to unmute music\"\r\n            onClick={handleToggleMute}\r\n          >\r\n            <img src={unmuteIcon} alt=\"unmute\" />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={styles.muteButton}\r\n            title=\"Click here to mute music\"\r\n            onClick={handleToggleMute}\r\n          >\r\n            <img src={muteIcon} alt=\"unmute\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  time: PropTypes.number,\r\n  hiScore: PropTypes.number.isRequired,\r\n  points: PropTypes.number.isRequired,\r\n  round: PropTypes.number.isRequired,\r\n  handdleToggleMute: PropTypes.func,\r\n  mute: PropTypes.bool,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ show, gameOver, handleOnStartGame }) {\r\n  return (\r\n    show && (\r\n      <div className={styles.root}>\r\n        {gameOver ? <p>GAME OVER</p> : null}\r\n        <span onClick={handleOnStartGame}>\r\n          PRESS <kbd>Enter</kbd> OR HERE TO START\r\n        </span>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  gameOver: PropTypes.bool.isRequired,\r\n  handleOnStartGame: PropTypes.func,\r\n};\r\n\r\nexport default Notification;\r\n","export const arraysEqual = (a, b) => {\r\n  if (a === b) return true;\r\n  if (a == null || b == null) return false;\r\n  if (a.length !== b.length) return false;\r\n\r\n  for (let i = 0; i < a.length; ++i) {\r\n    if (a[i] !== b[i]) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","import lollipopImage from '../assets/images/lollipop.svg';\r\nimport iceCreamImage from '../assets/images/ice_cream.svg';\r\n\r\nexport const ROUND_TIME = 60;\r\nexport const MOVEMENT_REWARD = 10;\r\nexport const ROWS = 17;\r\nexport const COLS = 33;\r\n// export const ROWS = 5;\r\n// export const COLS = 3;\r\n\r\nexport const KEYBOARD = {\r\n  Enter: 'Enter',\r\n  Left: 'ArrowLeft',\r\n  Right: 'ArrowRight',\r\n  Up: 'ArrowUp',\r\n  Down: 'ArrowDown',\r\n};\r\n\r\nexport const MAZE_PRIZES = [\r\n  {\r\n    name: 'Lollipop',\r\n    image: lollipopImage,\r\n    points: 2000,\r\n  },\r\n  {\r\n    name: 'IceCream',\r\n    image: iceCreamImage,\r\n    points: 5000,\r\n  },\r\n];\r\n","export function getRandInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n","import { arraysEqual } from '../utils/arrayUtils';\r\nimport { KEYBOARD } from '../utils/constants';\r\nimport { getRandInt } from '../utils/random';\r\n\r\nclass Maze {\r\n  constructor(rows, cols, cells, startCell, endCell, randomCellsAmount) {\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.cells = cells;\r\n    this.startCell = startCell;\r\n    this.endCell = endCell;\r\n\r\n    const randomCells = new Set();\r\n    while(randomCells.size < randomCellsAmount) {\r\n      const randomCell = this.getRandomCell();\r\n      if (arraysEqual(randomCell, startCell) || arraysEqual(randomCell, endCell))\r\n        continue;\r\n\r\n      randomCells.add(randomCell.toString());\r\n    }\r\n    this.randomCells = [...randomCells].map((cell) =>\r\n      cell.split(',').map((splittedCell) => parseInt(splittedCell, 10))\r\n    );\r\n  }\r\n\r\n  getCell(x, y) {\r\n    return this.cells[x + y * this.cols];\r\n  }\r\n\r\n  getRandomCell() {\r\n    return [getRandInt(0, this.cols), getRandInt(0, this.rows)];\r\n  }\r\n\r\n  validateStep(currentCell, action) {\r\n    const newPos = [...currentCell];\r\n    const currCellWalls = this.getCell(...currentCell);\r\n    switch (action) {\r\n      case KEYBOARD.Left:\r\n        if (currentCell[0] - 1 >= 0 && !currCellWalls[3])\r\n          newPos[0] = currentCell[0] - 1;\r\n        break;\r\n      case KEYBOARD.Right:\r\n        if (currentCell[0] + 1 < this.cols && !currCellWalls[1])\r\n          newPos[0] = currentCell[0] + 1;\r\n        break;\r\n      case KEYBOARD.Up:\r\n        if (currentCell[1] - 1 >= 0 && !currCellWalls[0])\r\n          newPos[1] = currentCell[1] - 1;\r\n        break;\r\n      case KEYBOARD.Down:\r\n        if (currentCell[1] + 1 < this.rows && !currCellWalls[2])\r\n          newPos[1] = currentCell[1] + 1;\r\n        break;\r\n      default:\r\n        throw new Error('Unknown key action');\r\n    }\r\n\r\n    return {\r\n      isValid: !arraysEqual(currentCell, newPos),\r\n      newPos,\r\n    };\r\n  }\r\n  \r\n  isGoalReached(currentCell) {\r\n    return arraysEqual(currentCell, this.endCell);\r\n  }\r\n\r\n  getPrizeCellIndex(currentCell) {\r\n    return this.randomCells.findIndex(\r\n      (cell) => arraysEqual(cell, currentCell)\r\n    );\r\n  }\r\n\r\n  isPrizeCell(currentCell) {\r\n    return this.getPrizeCellIndex(currentCell) !== -1;\r\n  }\r\n}\r\n\r\nexport default Maze;\r\n","import Maze from './Maze';\r\n\r\nclass Cell {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.walls = [true, true, true, true];\r\n    this.visited = false;\r\n  }\r\n}\r\n\r\nclass MazeGenerator {\r\n  constructor(rows, cols, pickRandomCellsAmount = 2) {\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.stack = [];\r\n    this.pickRandomCellsAmount = pickRandomCellsAmount;\r\n  }\r\n\r\n  createGrid() {\r\n    const grid = [];\r\n    for (let y = 0; y < this.rows; y++) {\r\n      for (let x = 0; x < this.cols; x++) {\r\n        grid.push(new Cell(x, y));\r\n      }\r\n    }\r\n    this.grid = grid;\r\n  }\r\n\r\n  getCell(y, x) {\r\n    if (x < 0 || y < 0 || x >= this.cols || y >= this.rows) {\r\n      return null;\r\n    }\r\n    return this.grid[x + y * this.cols];\r\n  }\r\n\r\n  checkNeighbors() {\r\n    const x = this.current.x;\r\n    const y = this.current.y;\r\n    const top = this.getCell(y - 1, x);\r\n    const right = this.getCell(y, x + 1);\r\n    const bottom = this.getCell(y + 1, x);\r\n    const left = this.getCell(y, x - 1);\r\n    const neighbors = [top, right, bottom, left].filter((c) => !!c && !c.visited);\r\n\r\n    if (neighbors.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const r = Math.floor(Math.random() * neighbors.length);\r\n    return neighbors[r];\r\n  }\r\n\r\n  removeWallsBetweenCurrentAnd(next) {\r\n    const dx = this.current.x - next.x;\r\n    const dy = this.current.y - next.y;\r\n\r\n    if (dx === 1) {\r\n      this.current.walls[3] = false;\r\n      next.walls[1] = false;\r\n    } else if (dx === -1) {\r\n      this.current.walls[1] = false;\r\n      next.walls[3] = false;\r\n    }\r\n\r\n    if (dy === 1) {\r\n      this.current.walls[0] = false;\r\n      next.walls[2] = false;\r\n    } else if (dy === -1) {\r\n      this.current.walls[2] = false;\r\n      next.walls[0] = false;\r\n    }\r\n  }\r\n\r\n  carve() {\r\n    const next = this.checkNeighbors();\r\n    if (next) {\r\n      next.visited = true;\r\n      this.stack.push(this.current);\r\n      this.removeWallsBetweenCurrentAnd(next);\r\n      this.current = next;\r\n      this.carve();\r\n    } else if (this.stack.length > 0) {\r\n      this.current = this.stack.pop();\r\n      this.carve();\r\n    }\r\n  }\r\n\r\n  generate() {\r\n    this.createGrid();\r\n    this.current = this.grid[0];\r\n    this.current.visited = true;\r\n    this.carve();\r\n\r\n    this.grid[0].walls[3] = false;\r\n    this.getCell(this.rows - 1, this.cols - 1).walls[2] = false;\r\n\r\n    return new Maze(\r\n      this.rows,\r\n      this.cols,\r\n      this.grid.map((x) => x.walls),\r\n      [0, 0],\r\n      // [this.rows - 1, this.cols - 1], <-- it was a bug, since X Axis is num of columns\r\n      [this.cols - 1, this.rows - 1],\r\n      this.pickRandomCellsAmount\r\n    );\r\n  }\r\n}\r\n\r\nexport default MazeGenerator;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport styles from './Board.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport useInterval from '@use-it/interval';\r\nimport logoImage from '../../assets/images/logo.svg';\r\n\r\n// import lollipopImage from '../../assets/images/lollipop.svg';\r\n\r\nfunction Board({ maze, currentCell, prizes, forwardedRef }) {\r\n  const canvas = useRef(null);\r\n  const [ctx, setCtx] = useState(undefined);\r\n  const [displayGoal, setDisplayGoal] = useState(true);\r\n\r\n  const onResize = useCallback(() => {\r\n    const { offsetWidth, offsetHeight } = forwardedRef.current;\r\n    canvas.current.width = offsetWidth;\r\n    canvas.current.height = offsetHeight;\r\n  }, [forwardedRef]);\r\n\r\n  useEffect(() => {\r\n    setCtx(canvas.current.getContext('2d'));\r\n    onResize();\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, [onResize]);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    const drawLine = (x1, y1, width, height) => {\r\n      ctx.strokeStyle = 'white';\r\n      ctx.beginPath();\r\n      ctx.moveTo(x1, y1);\r\n      ctx.lineTo(x1 + width, y1 + height);\r\n      ctx.stroke();\r\n    };\r\n\r\n    const draw = () => {\r\n      if (!maze) {\r\n        return;\r\n      }\r\n\r\n      ctx.fillStyle = 'black';\r\n      ctx.fillRect(0, 0, canvas.current.width, canvas.current.height);\r\n\r\n      const blockWidth = Math.floor(canvas.current.width / maze.cols);\r\n      const blockHeight = Math.floor(canvas.current.height / maze.rows);\r\n      const xOffset = Math.floor((canvas.current.width - maze.cols * blockWidth) / 2);\r\n\r\n      for (let y = 0; y < maze.rows; y++) {\r\n        for (let x = 0; x < maze.cols; x++) {\r\n          const cell = maze.cells[x + y * maze.cols];\r\n          if (y === 0 && cell[0]) {\r\n            drawLine(blockWidth * x + xOffset, blockHeight * y, blockWidth, 0);\r\n          }\r\n          if (cell[1]) {\r\n            drawLine(blockWidth * (x + 1) + xOffset, blockHeight * y, 0, blockHeight);\r\n          }\r\n          if (cell[2]) {\r\n            drawLine(blockWidth * x + xOffset, blockHeight * (y + 1), blockWidth, 0);\r\n          }\r\n          if (x === 0 && cell[3]) {\r\n            drawLine(blockWidth * x + xOffset, blockHeight * y, 0, blockHeight);\r\n          }\r\n        }\r\n      }\r\n\r\n      const generateImage = (x, y, img) => {\r\n        const logoSize = 0.75 * Math.min(blockWidth, blockHeight);\r\n        const image = new Image(logoSize, logoSize);\r\n        image.onload = () => {\r\n          if (didCancel)\r\n            return;\r\n          \r\n          ctx.drawImage(\r\n            image,\r\n            x * blockWidth + xOffset + (blockWidth - logoSize) / 2,\r\n            y * blockHeight + (blockHeight - logoSize) / 2,\r\n            logoSize,\r\n            logoSize\r\n          );\r\n        };\r\n\r\n        image.src = img;\r\n      };\r\n\r\n      const generateText = (x, y, text, color) => {\r\n        const textSize = Math.min(blockWidth, blockHeight);\r\n        ctx.fillStyle = color;\r\n        ctx.font = '20px \"Joystix\"';\r\n        ctx.textBaseline = 'top';\r\n\r\n        ctx.fillText(\r\n          text,\r\n          x * blockWidth + xOffset + (blockWidth - textSize) / 2,\r\n          y * blockHeight + (blockHeight - textSize) / 2,\r\n          textSize\r\n        );\r\n      };\r\n\r\n      generateImage(currentCell[0], currentCell[1], logoImage);\r\n\r\n      if (displayGoal) {\r\n        generateText(maze.endCell[0], maze.endCell[1], 'Goal', 'red');\r\n      }\r\n\r\n      prizes.forEach(prize => {\r\n       const {cell, image, isTaken, points, takenTime} = prize;\r\n\r\n        if (isTaken && (new Date() - takenTime) <= 3000)\r\n          generateText(cell[0], cell[1], `+${points}`, 'yellow');\r\n        else if(!isTaken)\r\n          generateImage(cell[0], cell[1], image);\r\n      });\r\n    };\r\n\r\n    draw();\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [ctx, currentCell, maze, displayGoal, prizes]);\r\n\r\n  useInterval(() => {\r\n    setDisplayGoal(oldDisplayState => !oldDisplayState);\r\n  }, 1000);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <canvas className={styles.canvas} ref={canvas} />\r\n    </div>\r\n  );\r\n}\r\n\r\nBoard.propTypes = {\r\n  maze: PropTypes.shape({\r\n    cols: PropTypes.number.isRequired,\r\n    rows: PropTypes.number.isRequired,\r\n    cells: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.bool)).isRequired,\r\n    currentCell: PropTypes.arrayOf(PropTypes.number),\r\n    forwardedRef: PropTypes.object,\r\n  }),\r\n};\r\n\r\nexport default Board;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst noop = () => {};\r\n\r\nexport function useKey(keys, action) {\r\n  const actionRef = useRef(noop);\r\n  actionRef.current = action;\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event) => {\r\n      if (keys.includes(event.key)) {\r\n        event.preventDefault();\r\n        if (actionRef.current) {\r\n          actionRef.current(event);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', onKeyDown);\r\n\r\n    return () => window.removeEventListener('keydown', onKeyDown);\r\n  }, [keys]);\r\n}\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport styles from './Joystick.module.css';\r\nimport { KEYBOARD } from '../../utils/constants';\r\n\r\nfunction Joystick({ handleOnArrowKeyPressed }) {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div\r\n        className={clsx(styles.button, styles.left)}\r\n        onClick={() => handleOnArrowKeyPressed({ key: KEYBOARD.Left })}\r\n      >\r\n        <i className={clsx(styles.arrow, styles.leftArrow)} />\r\n      </div>\r\n      <div\r\n        className={clsx(styles.button, styles.right)}\r\n        onClick={() => handleOnArrowKeyPressed({ key: KEYBOARD.Right })}\r\n      >\r\n        <i className={clsx(styles.arrow, styles.rightArrow)} />\r\n      </div>\r\n      <div\r\n        className={clsx(styles.button, styles.top)}\r\n        onClick={() => handleOnArrowKeyPressed({ key: KEYBOARD.Up })}\r\n      >\r\n        <i className={clsx(styles.arrow, styles.upArrow)} />\r\n      </div>\r\n      <div\r\n        className={clsx(styles.button, styles.bottom)}\r\n        onClick={() => handleOnArrowKeyPressed({ key: KEYBOARD.Down })}\r\n      >\r\n        <i className={clsx(styles.arrow, styles.downArrow)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Joystick;\r\n","import React, { useCallback, useEffect, useReducer, useRef, useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport useInterval from '@use-it/interval';\r\nimport Header from '../../components/Header/Header';\r\nimport Notification from '../../components/Notification/Notification';\r\nimport MazeGenerator from '../../maze/MazeGenerator';\r\nimport Board from '../Board/Board';\r\nimport {\r\n  COLS,\r\n  KEYBOARD,\r\n  MAZE_PRIZES,\r\n  MOVEMENT_REWARD,\r\n  ROUND_TIME,\r\n  ROWS,\r\n} from '../../utils/constants';\r\nimport { useKey } from '../../hooks/useKey';\r\nimport mazeAudioFile from '../../assets/audio/maze.mp3';\r\nimport mazeLevelEndAudioFile from '../../assets/audio/level_end.mp3';\r\nimport { arraysEqual } from '../../utils/arrayUtils';\r\nimport Joystick from '../../components/Joystick/Joystick';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'startGame': {\r\n      return {\r\n        ...state,\r\n        maze: action.payload.maze,\r\n        currentCell: action.payload.maze.startCell,\r\n        time: ROUND_TIME,\r\n        visitedCells: new Set(),\r\n        isGoalReached: false,\r\n        prizes: [],\r\n      };\r\n    }\r\n    case 'reachGoal': {\r\n      return {\r\n        ...state,\r\n        isGoalReached: true,\r\n        points: state.points + state.round * state.time * 100,\r\n      };\r\n    }\r\n    case 'winGame': {\r\n      return {\r\n        ...state,\r\n        maze: action.payload.maze,\r\n        currentCell: action.payload.maze.startCell,\r\n        time: ROUND_TIME,\r\n        round: state.round + 1,\r\n        visitedCells: new Set(),\r\n        isGoalReached: false,\r\n        prizes: [],\r\n      };\r\n    }\r\n    case 'decrementTime': {\r\n      return {\r\n        ...state,\r\n        time: state.time - 1,\r\n      };\r\n    }\r\n    case 'endGame': {\r\n      return {\r\n        ...state,\r\n        hiScore: Math.max(state.hiScore, state.points),\r\n        points: 0,\r\n      };\r\n    }\r\n    case 'addPrize': {\r\n      const index = action.payload.index;\r\n\r\n      const prize = {\r\n        ...MAZE_PRIZES[index],\r\n        isTaken: false,\r\n        cell: state.maze.randomCells[index],\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        prizes: [...state.prizes, prize],\r\n      };\r\n    }\r\n    case 'reachPrize': {\r\n      const index = action.payload.removeIndex;\r\n\r\n      return {\r\n        ...state,\r\n        points: state.points + (!state.prizes[index].isTaken ? state.prizes[index].points : 0),\r\n        prizes: state.prizes.map((p, idx) =>\r\n          idx === index ? { ...p, isTaken: true, takenTime: new Date() } : p\r\n        ),\r\n      };\r\n    }\r\n    case 'moveCharacter': {\r\n      const isVisited = state.visitedCells.has(action.payload.cells.toString());\r\n\r\n      return {\r\n        ...state,\r\n        currentCell: action.payload.cells,\r\n        points: state.points + (!isVisited ? MOVEMENT_REWARD : 0),\r\n        visitedCells: new Set([...state.visitedCells, action.payload.cells.toString()]),\r\n      };\r\n    }\r\n    default:\r\n      throw new Error('Unknown action');\r\n  }\r\n}\r\n\r\nconst mazeAudio = new Audio(mazeAudioFile);\r\nmazeAudio.loop = true;\r\n// mazeAudio.volume = 0.3;\r\n\r\nconst levelEndAudio = new Audio(mazeLevelEndAudioFile);\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    points: 0,\r\n    round: 1,\r\n    hiScore: 0,\r\n    time: undefined,\r\n    maze: undefined,\r\n    currentCell: undefined,\r\n    visitedCells: new Set(),\r\n    isGoalReached: false,\r\n    prizes: [],\r\n  });\r\n\r\n  const [mute, setMute] = useState(false);\r\n  const container = useRef(null);\r\n\r\n  const isGameOver = !state.time;\r\n\r\n  const handleToggleMute = useCallback(() => {\r\n    if (!mute) {\r\n      mazeAudio.pause();\r\n      mazeAudio.currentTime = 0;\r\n    }\r\n\r\n    setMute(oldMute => !oldMute);\r\n  }, [mute]);\r\n\r\n  const handleOnStartGame = useCallback(() => {\r\n    if (!state.time) {\r\n      dispatch({\r\n        type: 'startGame',\r\n        payload: {\r\n          maze: new MazeGenerator(ROWS, COLS, MAZE_PRIZES.length).generate(),\r\n        },\r\n      });\r\n    }\r\n  }, [state.time]);\r\n\r\n  const handleOnArrowKeyPressed = useCallback(\r\n    (event) => {\r\n      if (!state.currentCell || !state.maze || isGameOver || state.isGoalReached) return;\r\n      const { isValid, newPos } = state.maze.validateStep(state.currentCell, event.key);\r\n\r\n      if (isValid) {\r\n        const prizeIndex = state.prizes.findIndex((prize) => arraysEqual(prize.cell, newPos));\r\n        if (prizeIndex >= 0) {\r\n          dispatch({\r\n            type: 'reachPrize',\r\n            payload: {\r\n              removeIndex: prizeIndex,\r\n            },\r\n          });\r\n        } else if (state.maze.isGoalReached(newPos)) {\r\n          dispatch({\r\n            type: 'reachGoal',\r\n          });\r\n        }\r\n        dispatch({\r\n          type: 'moveCharacter',\r\n          payload: {\r\n            cells: newPos,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [state.currentCell, state.maze, isGameOver, state.isGoalReached, state.prizes]\r\n  );\r\n\r\n  useKey([KEYBOARD.Enter], handleOnStartGame);\r\n  useKey([KEYBOARD.Left, KEYBOARD.Right, KEYBOARD.Up, KEYBOARD.Down], handleOnArrowKeyPressed);\r\n\r\n  useInterval(\r\n    () => {\r\n      dispatch({ type: 'decrementTime' });\r\n    },\r\n    state.time && !state.isGoalReached ? 1000 : null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (state.time === 0) {\r\n      mazeAudio.pause();\r\n      mazeAudio.currentTime = 0;\r\n      dispatch({ type: 'endGame' });\r\n    } else if (ROUND_TIME - state.time === 30) {\r\n      dispatch({\r\n        type: 'addPrize',\r\n        payload: { index: 0 }, // Lolippop\r\n      });\r\n    } else if (state.time === 15) {\r\n      dispatch({\r\n        type: 'addPrize',\r\n        payload: { index: 1 }, // Ice Cream\r\n      });\r\n    }\r\n  }, [state.time]);\r\n\r\n  useEffect(() => {\r\n    if (state.round > 0 && state.time > 0 && !state.isGoalReached && !mute) {\r\n      mazeAudio.play();\r\n    }\r\n  }, [state.round, state.time, state.isGoalReached, mute]);\r\n\r\n  useEffect(() => {\r\n    const onFinishAudio = () => {\r\n      levelEndAudio.currentTime = 0;\r\n      dispatch({\r\n        type: 'winGame',\r\n        payload: {\r\n          maze: new MazeGenerator(ROWS, COLS, MAZE_PRIZES.length).generate(),\r\n        },\r\n      });\r\n    };\r\n\r\n    if (state.isGoalReached && !mute) {\r\n      mazeAudio.pause();\r\n      mazeAudio.currentTime = 0;\r\n\r\n      levelEndAudio.play();\r\n      levelEndAudio.addEventListener('ended', onFinishAudio);\r\n    }\r\n\r\n    return () => levelEndAudio.removeEventListener('ended', onFinishAudio);\r\n  }, [state.isGoalReached, mute]);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Header\r\n        mute={mute}\r\n        handleToggleMute={handleToggleMute}\r\n        hiScore={state.hiScore}\r\n        points={state.points}\r\n        time={state.time}\r\n        round={state.round}\r\n      />\r\n      <div className={styles.container} ref={container}>\r\n        <Board\r\n          maze={state.maze}\r\n          currentCell={state.currentCell}\r\n          prizes={state.prizes}\r\n          forwardedRef={container}\r\n        />\r\n        <Joystick handleOnArrowKeyPressed={handleOnArrowKeyPressed} />\r\n      </div>\r\n      <Notification\r\n        show={!state.time}\r\n        gameOver={state.time === 0}\r\n        handleOnStartGame={handleOnStartGame}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}